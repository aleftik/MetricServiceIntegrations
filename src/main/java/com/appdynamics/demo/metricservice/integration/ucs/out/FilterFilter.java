//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.03.27 at 10:50:09 AM PDT 
//


package com.appdynamics.demo.metricservice.integration.ucs.out;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElementRef;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for filterFilter complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="filterFilter">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element ref="{}abstractFilter"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "filterFilter", propOrder = {
    "abstractFilter"
})
public class FilterFilter {

    @XmlElementRef(name = "abstractFilter", type = JAXBElement.class)
    protected JAXBElement<?> abstractFilter;

    /**
     * Gets the value of the abstractFilter property.
     * 
     * @return
     *     possible object is
     *     {@link JAXBElement }{@code <}{@link NotFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link GteFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link AndFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link Object }{@code >}
     *     {@link JAXBElement }{@code <}{@link LtFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link OrFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link GtFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link LtFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link NeqFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link EqFilter }{@code >}
     *     
     */
    public JAXBElement<?> getAbstractFilter() {
        return abstractFilter;
    }

    /**
     * Sets the value of the abstractFilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link JAXBElement }{@code <}{@link NotFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link GteFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link AndFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link Object }{@code >}
     *     {@link JAXBElement }{@code <}{@link LtFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link OrFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link GtFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link LtFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link NeqFilter }{@code >}
     *     {@link JAXBElement }{@code <}{@link EqFilter }{@code >}
     *     
     */
    public void setAbstractFilter(JAXBElement<?> value) {
        this.abstractFilter = value;
    }

}
